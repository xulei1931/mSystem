// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.12.1
// source: film.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HotPlayMoviesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location int64 `protobuf:"varint,1,opt,name=location,proto3" json:"location,omitempty"` // 位置id
}

func (x *HotPlayMoviesReq) Reset() {
	*x = HotPlayMoviesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotPlayMoviesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotPlayMoviesReq) ProtoMessage() {}

func (x *HotPlayMoviesReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotPlayMoviesReq.ProtoReflect.Descriptor instead.
func (*HotPlayMoviesReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{0}
}

func (x *HotPlayMoviesReq) GetLocation() int64 {
	if x != nil {
		return x.Location
	}
	return 0
}

type HotPlayMoviesRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"` // 正在上映的影片
}

func (x *HotPlayMoviesRep) Reset() {
	*x = HotPlayMoviesRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotPlayMoviesRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotPlayMoviesRep) ProtoMessage() {}

func (x *HotPlayMoviesRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotPlayMoviesRep.ProtoReflect.Descriptor instead.
func (*HotPlayMoviesRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{1}
}

func (x *HotPlayMoviesRep) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

type Movie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img              string  `protobuf:"bytes,1,opt,name=img,proto3" json:"img,omitempty"`                           // 影片logo
	MovieId          int64   `protobuf:"varint,2,opt,name=movieId,proto3" json:"movieId,omitempty"`                  // 电影id
	TitleCn          string  `protobuf:"bytes,3,opt,name=titleCn,proto3" json:"titleCn,omitempty"`                   // 中文名字
	MovieSupportType string  `protobuf:"bytes,4,opt,name=movieSupportType,proto3" json:"movieSupportType,omitempty"` // 影片支持的播放类型  如3D IMAX 要求返回格式 3D|IMAX
	FilmDirector     string  `protobuf:"bytes,5,opt,name=filmDirector,proto3" json:"filmDirector,omitempty"`         // 影片导演
	Actors           string  `protobuf:"bytes,6,opt,name=actors,proto3" json:"actors,omitempty"`                     // 主演
	FilmDrama        string  `protobuf:"bytes,7,opt,name=filmDrama,proto3" json:"filmDrama,omitempty"`               // 影片看点
	RatingFinal      float32 `protobuf:"fixed32,8,opt,name=ratingFinal,proto3" json:"ratingFinal,omitempty"`
}

func (x *Movie) Reset() {
	*x = Movie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Movie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Movie) ProtoMessage() {}

func (x *Movie) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Movie.ProtoReflect.Descriptor instead.
func (*Movie) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{2}
}

func (x *Movie) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *Movie) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *Movie) GetTitleCn() string {
	if x != nil {
		return x.TitleCn
	}
	return ""
}

func (x *Movie) GetMovieSupportType() string {
	if x != nil {
		return x.MovieSupportType
	}
	return ""
}

func (x *Movie) GetFilmDirector() string {
	if x != nil {
		return x.FilmDirector
	}
	return ""
}

func (x *Movie) GetActors() string {
	if x != nil {
		return x.Actors
	}
	return ""
}

func (x *Movie) GetFilmDrama() string {
	if x != nil {
		return x.FilmDrama
	}
	return ""
}

func (x *Movie) GetRatingFinal() float32 {
	if x != nil {
		return x.RatingFinal
	}
	return 0
}

type HotMovie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActorName     []string `protobuf:"bytes,1,rep,name=actorName,proto3" json:"actorName,omitempty"`         // 演员名字
	CommonSpecial string   `protobuf:"bytes,2,opt,name=commonSpecial,proto3" json:"commonSpecial,omitempty"` // 影片简介
	DirectorName  string   `protobuf:"bytes,3,opt,name=directorName,proto3" json:"directorName,omitempty"`   // 导演名字
	Img           string   `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`                     // 影片logo
	Is3D          int64    `protobuf:"varint,5,opt,name=is3D,proto3" json:"is3D,omitempty"`                  // 是否3D
	IsDMAX        int64    `protobuf:"varint,6,opt,name=isDMAX,proto3" json:"isDMAX,omitempty"`              // 是否DMAX
	IsFilter      int64    `protobuf:"varint,7,opt,name=isFilter,proto3" json:"isFilter,omitempty"`          // 是否过滤
	IsHot         int64    `protobuf:"varint,8,opt,name=isHot,proto3" json:"isHot,omitempty"`                // 是否热映
	IsIMAX        int64    `protobuf:"varint,9,opt,name=isIMAX,proto3" json:"isIMAX,omitempty"`              // 是否IMAX
	IsIMAX3D      int64    `protobuf:"varint,10,opt,name=isIMAX3D,proto3" json:"isIMAX3D,omitempty"`         // 是否IMAX3D
	IsNew         int64    `protobuf:"varint,11,opt,name=isNew,proto3" json:"isNew,omitempty"`               // 是否新上映
	Length        int64    `protobuf:"varint,12,opt,name=length,proto3" json:"length,omitempty"`             // 时长
	MovieId       int64    `protobuf:"varint,13,opt,name=movieId,proto3" json:"movieId,omitempty"`           // 电影时长
	RDay          int64    `protobuf:"varint,14,opt,name=rDay,proto3" json:"rDay,omitempty"`                 // 上映日期
	RMonth        int64    `protobuf:"varint,15,opt,name=rMonth,proto3" json:"rMonth,omitempty"`             // 上映月份
	RYear         int64    `protobuf:"varint,16,opt,name=rYear,proto3" json:"rYear,omitempty"`               // 上映年份
	RatingFinal   float32  `protobuf:"fixed32,17,opt,name=ratingFinal,proto3" json:"ratingFinal,omitempty"`  // 最终评分
	T             string   `protobuf:"bytes,18,opt,name=t,proto3" json:"t,omitempty"`                        // 名字
	TitleCn       string   `protobuf:"bytes,19,opt,name=titleCn,proto3" json:"titleCn,omitempty"`            // 中文名字
	TitleEn       string   `protobuf:"bytes,20,opt,name=titleEn,proto3" json:"titleEn,omitempty"`            // 英文名字
	Type          string   `protobuf:"bytes,21,opt,name=type,proto3" json:"type,omitempty"`                  // 影片类型
	WantedCount   int64    `protobuf:"varint,22,opt,name=wantedCount,proto3" json:"wantedCount,omitempty"`   // 想看的人数
}

func (x *HotMovie) Reset() {
	*x = HotMovie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HotMovie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HotMovie) ProtoMessage() {}

func (x *HotMovie) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HotMovie.ProtoReflect.Descriptor instead.
func (*HotMovie) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{3}
}

func (x *HotMovie) GetActorName() []string {
	if x != nil {
		return x.ActorName
	}
	return nil
}

func (x *HotMovie) GetCommonSpecial() string {
	if x != nil {
		return x.CommonSpecial
	}
	return ""
}

func (x *HotMovie) GetDirectorName() string {
	if x != nil {
		return x.DirectorName
	}
	return ""
}

func (x *HotMovie) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *HotMovie) GetIs3D() int64 {
	if x != nil {
		return x.Is3D
	}
	return 0
}

func (x *HotMovie) GetIsDMAX() int64 {
	if x != nil {
		return x.IsDMAX
	}
	return 0
}

func (x *HotMovie) GetIsFilter() int64 {
	if x != nil {
		return x.IsFilter
	}
	return 0
}

func (x *HotMovie) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *HotMovie) GetIsIMAX() int64 {
	if x != nil {
		return x.IsIMAX
	}
	return 0
}

func (x *HotMovie) GetIsIMAX3D() int64 {
	if x != nil {
		return x.IsIMAX3D
	}
	return 0
}

func (x *HotMovie) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *HotMovie) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *HotMovie) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *HotMovie) GetRDay() int64 {
	if x != nil {
		return x.RDay
	}
	return 0
}

func (x *HotMovie) GetRMonth() int64 {
	if x != nil {
		return x.RMonth
	}
	return 0
}

func (x *HotMovie) GetRYear() int64 {
	if x != nil {
		return x.RYear
	}
	return 0
}

func (x *HotMovie) GetRatingFinal() float32 {
	if x != nil {
		return x.RatingFinal
	}
	return 0
}

func (x *HotMovie) GetT() string {
	if x != nil {
		return x.T
	}
	return ""
}

func (x *HotMovie) GetTitleCn() string {
	if x != nil {
		return x.TitleCn
	}
	return ""
}

func (x *HotMovie) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *HotMovie) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *HotMovie) GetWantedCount() int64 {
	if x != nil {
		return x.WantedCount
	}
	return 0
}

type FilmAllMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logo                 string  `protobuf:"bytes,1,opt,name=logo,proto3" json:"logo,omitempty"`
	FilmLong             int64   `protobuf:"varint,2,opt,name=filmLong,proto3" json:"filmLong,omitempty"`
	IsSelectSeat         int64   `protobuf:"varint,3,opt,name=isSelectSeat,proto3" json:"isSelectSeat,omitempty"`
	FilmPrice            float32 `protobuf:"fixed32,4,opt,name=filmPrice,proto3" json:"filmPrice,omitempty"`
	FilmScreenwriter     string  `protobuf:"bytes,5,opt,name=filmScreenwriter,proto3" json:"filmScreenwriter,omitempty"`
	CommentNum           int64   `protobuf:"varint,6,opt,name=commentNum,proto3" json:"commentNum,omitempty"`
	FilmName             string  `protobuf:"bytes,7,opt,name=filmName,proto3" json:"filmName,omitempty"`
	IsSupportInlineWatch int64   `protobuf:"varint,8,opt,name=isSupportInlineWatch,proto3" json:"isSupportInlineWatch,omitempty"`
	CreateAt             string  `protobuf:"bytes,9,opt,name=createAt,proto3" json:"createAt,omitempty"`
	BigType              int64   `protobuf:"varint,10,opt,name=bigType,proto3" json:"bigType,omitempty"`
	FilmDrama            string  `protobuf:"bytes,11,opt,name=filmDrama,proto3" json:"filmDrama,omitempty"`
	UserAccessTimes      int64   `protobuf:"varint,12,opt,name=userAccessTimes,proto3" json:"userAccessTimes,omitempty"`
	FilmBoxoffice        float32 `protobuf:"fixed32,13,opt,name=filmBoxoffice,proto3" json:"filmBoxoffice,omitempty"`
	FilmDirector         string  `protobuf:"bytes,14,opt,name=filmDirector,proto3" json:"filmDirector,omitempty"`
	UserLikeWatchTimes   int64   `protobuf:"varint,15,opt,name=userLikeWatchTimes,proto3" json:"userLikeWatchTimes,omitempty"`
	UserCommentTimes     int64   `protobuf:"varint,16,opt,name=userCommentTimes,proto3" json:"userCommentTimes,omitempty"`
	CompanyIssued        string  `protobuf:"bytes,17,opt,name=companyIssued,proto3" json:"companyIssued,omitempty"`
	Country              string  `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	CommentScore         float32 `protobuf:"fixed32,19,opt,name=commentScore,proto3" json:"commentScore,omitempty"`
	Is3D                 int64   `protobuf:"varint,20,opt,name=is3D,proto3" json:"is3D,omitempty"`
	IsDMAX               int64   `protobuf:"varint,21,opt,name=isDMAX,proto3" json:"isDMAX,omitempty"`
	IsFilter             int64   `protobuf:"varint,22,opt,name=isFilter,proto3" json:"isFilter,omitempty"`
	IsHot                int64   `protobuf:"varint,23,opt,name=isHot,proto3" json:"isHot,omitempty"`
	IsIMAX               int64   `protobuf:"varint,24,opt,name=isIMAX,proto3" json:"isIMAX,omitempty"`
	IsIMAX3D             int64   `protobuf:"varint,25,opt,name=isIMAX3D,proto3" json:"isIMAX3D,omitempty"`
	IsNew                int64   `protobuf:"varint,26,opt,name=isNew,proto3" json:"isNew,omitempty"`
	RDay                 int64   `protobuf:"varint,27,opt,name=rDay,proto3" json:"rDay,omitempty"`
	RMonth               int64   `protobuf:"varint,28,opt,name=rMonth,proto3" json:"rMonth,omitempty"`
	RYear                int64   `protobuf:"varint,29,opt,name=rYear,proto3" json:"rYear,omitempty"`
	CommonSpecial        string  `protobuf:"bytes,30,opt,name=commonSpecial,proto3" json:"commonSpecial,omitempty"`
}

func (x *FilmAllMessage) Reset() {
	*x = FilmAllMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilmAllMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilmAllMessage) ProtoMessage() {}

func (x *FilmAllMessage) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilmAllMessage.ProtoReflect.Descriptor instead.
func (*FilmAllMessage) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{4}
}

func (x *FilmAllMessage) GetLogo() string {
	if x != nil {
		return x.Logo
	}
	return ""
}

func (x *FilmAllMessage) GetFilmLong() int64 {
	if x != nil {
		return x.FilmLong
	}
	return 0
}

func (x *FilmAllMessage) GetIsSelectSeat() int64 {
	if x != nil {
		return x.IsSelectSeat
	}
	return 0
}

func (x *FilmAllMessage) GetFilmPrice() float32 {
	if x != nil {
		return x.FilmPrice
	}
	return 0
}

func (x *FilmAllMessage) GetFilmScreenwriter() string {
	if x != nil {
		return x.FilmScreenwriter
	}
	return ""
}

func (x *FilmAllMessage) GetCommentNum() int64 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *FilmAllMessage) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

func (x *FilmAllMessage) GetIsSupportInlineWatch() int64 {
	if x != nil {
		return x.IsSupportInlineWatch
	}
	return 0
}

func (x *FilmAllMessage) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *FilmAllMessage) GetBigType() int64 {
	if x != nil {
		return x.BigType
	}
	return 0
}

func (x *FilmAllMessage) GetFilmDrama() string {
	if x != nil {
		return x.FilmDrama
	}
	return ""
}

func (x *FilmAllMessage) GetUserAccessTimes() int64 {
	if x != nil {
		return x.UserAccessTimes
	}
	return 0
}

func (x *FilmAllMessage) GetFilmBoxoffice() float32 {
	if x != nil {
		return x.FilmBoxoffice
	}
	return 0
}

func (x *FilmAllMessage) GetFilmDirector() string {
	if x != nil {
		return x.FilmDirector
	}
	return ""
}

func (x *FilmAllMessage) GetUserLikeWatchTimes() int64 {
	if x != nil {
		return x.UserLikeWatchTimes
	}
	return 0
}

func (x *FilmAllMessage) GetUserCommentTimes() int64 {
	if x != nil {
		return x.UserCommentTimes
	}
	return 0
}

func (x *FilmAllMessage) GetCompanyIssued() string {
	if x != nil {
		return x.CompanyIssued
	}
	return ""
}

func (x *FilmAllMessage) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *FilmAllMessage) GetCommentScore() float32 {
	if x != nil {
		return x.CommentScore
	}
	return 0
}

func (x *FilmAllMessage) GetIs3D() int64 {
	if x != nil {
		return x.Is3D
	}
	return 0
}

func (x *FilmAllMessage) GetIsDMAX() int64 {
	if x != nil {
		return x.IsDMAX
	}
	return 0
}

func (x *FilmAllMessage) GetIsFilter() int64 {
	if x != nil {
		return x.IsFilter
	}
	return 0
}

func (x *FilmAllMessage) GetIsHot() int64 {
	if x != nil {
		return x.IsHot
	}
	return 0
}

func (x *FilmAllMessage) GetIsIMAX() int64 {
	if x != nil {
		return x.IsIMAX
	}
	return 0
}

func (x *FilmAllMessage) GetIsIMAX3D() int64 {
	if x != nil {
		return x.IsIMAX3D
	}
	return 0
}

func (x *FilmAllMessage) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *FilmAllMessage) GetRDay() int64 {
	if x != nil {
		return x.RDay
	}
	return 0
}

func (x *FilmAllMessage) GetRMonth() int64 {
	if x != nil {
		return x.RMonth
	}
	return 0
}

func (x *FilmAllMessage) GetRYear() int64 {
	if x != nil {
		return x.RYear
	}
	return 0
}

func (x *FilmAllMessage) GetCommonSpecial() string {
	if x != nil {
		return x.CommonSpecial
	}
	return ""
}

type MovieDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
	MovieId    int64 `protobuf:"varint,2,opt,name=movieId,proto3" json:"movieId,omitempty"`
}

func (x *MovieDetailReq) Reset() {
	*x = MovieDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailReq) ProtoMessage() {}

func (x *MovieDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailReq.ProtoReflect.Descriptor instead.
func (*MovieDetailReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{5}
}

func (x *MovieDetailReq) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *MovieDetailReq) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type MovieDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image         string  `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	TitleCn       string  `protobuf:"bytes,2,opt,name=titleCn,proto3" json:"titleCn,omitempty"`
	TitleEn       string  `protobuf:"bytes,3,opt,name=titleEn,proto3" json:"titleEn,omitempty"`
	Rating        float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Year          int64   `protobuf:"varint,5,opt,name=year,proto3" json:"year,omitempty"`
	Content       string  `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	Type          string  `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	RunTime       int64   `protobuf:"varint,8,opt,name=runTime,proto3" json:"runTime,omitempty"`
	CommonSpecial string  `protobuf:"bytes,9,opt,name=commonSpecial,proto3" json:"commonSpecial,omitempty"`
	Director      string  `protobuf:"bytes,10,opt,name=director,proto3" json:"director,omitempty"`
	Location      string  `protobuf:"bytes,11,opt,name=location,proto3" json:"location,omitempty"`
	Date          string  `protobuf:"bytes,12,opt,name=date,proto3" json:"date,omitempty"`
}

func (x *MovieDetailInfo) Reset() {
	*x = MovieDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailInfo) ProtoMessage() {}

func (x *MovieDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailInfo.ProtoReflect.Descriptor instead.
func (*MovieDetailInfo) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{6}
}

func (x *MovieDetailInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *MovieDetailInfo) GetTitleCn() string {
	if x != nil {
		return x.TitleCn
	}
	return ""
}

func (x *MovieDetailInfo) GetTitleEn() string {
	if x != nil {
		return x.TitleEn
	}
	return ""
}

func (x *MovieDetailInfo) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *MovieDetailInfo) GetYear() int64 {
	if x != nil {
		return x.Year
	}
	return 0
}

func (x *MovieDetailInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *MovieDetailInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MovieDetailInfo) GetRunTime() int64 {
	if x != nil {
		return x.RunTime
	}
	return 0
}

func (x *MovieDetailInfo) GetCommonSpecial() string {
	if x != nil {
		return x.CommonSpecial
	}
	return ""
}

func (x *MovieDetailInfo) GetDirector() string {
	if x != nil {
		return x.Director
	}
	return ""
}

func (x *MovieDetailInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *MovieDetailInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type MovieDetailRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Err  string           `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	Res  *MovieDetailInfo `protobuf:"bytes,3,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *MovieDetailRep) Reset() {
	*x = MovieDetailRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailRep) ProtoMessage() {}

func (x *MovieDetailRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailRep.ProtoReflect.Descriptor instead.
func (*MovieDetailRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{7}
}

func (x *MovieDetailRep) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MovieDetailRep) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *MovieDetailRep) GetRes() *MovieDetailInfo {
	if x != nil {
		return x.Res
	}
	return nil
}

type MovieCreditsWithTypesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int64 `protobuf:"varint,1,opt,name=MovieId,proto3" json:"MovieId,omitempty"`
}

func (x *MovieCreditsWithTypesReq) Reset() {
	*x = MovieCreditsWithTypesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCreditsWithTypesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCreditsWithTypesReq) ProtoMessage() {}

func (x *MovieCreditsWithTypesReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCreditsWithTypesReq.ProtoReflect.Descriptor instead.
func (*MovieCreditsWithTypesReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{8}
}

func (x *MovieCreditsWithTypesReq) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type MovieCreditsWithTypesRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []*Type `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *MovieCreditsWithTypesRep) Reset() {
	*x = MovieCreditsWithTypesRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCreditsWithTypesRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCreditsWithTypesRep) ProtoMessage() {}

func (x *MovieCreditsWithTypesRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCreditsWithTypesRep.ProtoReflect.Descriptor instead.
func (*MovieCreditsWithTypesRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{9}
}

func (x *MovieCreditsWithTypesRep) GetTypes() []*Type {
	if x != nil {
		return x.Types
	}
	return nil
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName   string     `protobuf:"bytes,1,opt,name=typeName,proto3" json:"typeName,omitempty"`
	TypeNameEc string     `protobuf:"bytes,2,opt,name=typeNameEc,proto3" json:"typeNameEc,omitempty"`
	Persons    []*Persons `protobuf:"bytes,3,rep,name=persons,proto3" json:"persons,omitempty"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{10}
}

func (x *Type) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Type) GetTypeNameEc() string {
	if x != nil {
		return x.TypeNameEc
	}
	return ""
}

func (x *Type) GetPersons() []*Persons {
	if x != nil {
		return x.Persons
	}
	return nil
}

type Persons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image     string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameEn    string `protobuf:"bytes,3,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	RoleCover string `protobuf:"bytes,4,opt,name=roleCover,proto3" json:"roleCover,omitempty"`
	Personate string `protobuf:"bytes,5,opt,name=personate,proto3" json:"personate,omitempty"`
}

func (x *Persons) Reset() {
	*x = Persons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Persons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Persons) ProtoMessage() {}

func (x *Persons) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Persons.ProtoReflect.Descriptor instead.
func (*Persons) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{11}
}

func (x *Persons) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Persons) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Persons) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *Persons) GetRoleCover() string {
	if x != nil {
		return x.RoleCover
	}
	return ""
}

func (x *Persons) GetPersonate() string {
	if x != nil {
		return x.Personate
	}
	return ""
}

type ImageAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int64 `protobuf:"varint,2,opt,name=movieId,proto3" json:"movieId,omitempty"`
}

func (x *ImageAllReq) Reset() {
	*x = ImageAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageAllReq) ProtoMessage() {}

func (x *ImageAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageAllReq.ProtoReflect.Descriptor instead.
func (*ImageAllReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{12}
}

func (x *ImageAllReq) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type ImageAllRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *ImageAllRep) Reset() {
	*x = ImageAllRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageAllRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageAllRep) ProtoMessage() {}

func (x *ImageAllRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageAllRep.ProtoReflect.Descriptor instead.
func (*ImageAllRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{13}
}

func (x *ImageAllRep) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{14}
}

func (x *Image) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type LocationMoviesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocationMoviesReq) Reset() {
	*x = LocationMoviesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMoviesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMoviesReq) ProtoMessage() {}

func (x *LocationMoviesReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMoviesReq.ProtoReflect.Descriptor instead.
func (*LocationMoviesReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{15}
}

type LocationMoviesRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"` // 正在上映的影片
}

func (x *LocationMoviesRep) Reset() {
	*x = LocationMoviesRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMoviesRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMoviesRep) ProtoMessage() {}

func (x *LocationMoviesRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMoviesRep.ProtoReflect.Descriptor instead.
func (*LocationMoviesRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{16}
}

func (x *LocationMoviesRep) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

type MovieComingNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovieComingNewReq) Reset() {
	*x = MovieComingNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieComingNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieComingNewReq) ProtoMessage() {}

func (x *MovieComingNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieComingNewReq.ProtoReflect.Descriptor instead.
func (*MovieComingNewReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{17}
}

type MovieComingNewRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*Movie `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"` // 正在上映的影片
}

func (x *MovieComingNewRep) Reset() {
	*x = MovieComingNewRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieComingNewRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieComingNewRep) ProtoMessage() {}

func (x *MovieComingNewRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieComingNewRep.ProtoReflect.Descriptor instead.
func (*MovieComingNewRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{18}
}

func (x *MovieComingNewRep) GetMovies() []*Movie {
	if x != nil {
		return x.Movies
	}
	return nil
}

type SearchRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subjects []*SearchMovie `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"` // 搜索的列表
	Total    int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // 列表总数
}

func (x *SearchRep) Reset() {
	*x = SearchRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRep) ProtoMessage() {}

func (x *SearchRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRep.ProtoReflect.Descriptor instead.
func (*SearchRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{19}
}

func (x *SearchRep) GetSubjects() []*SearchMovie {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *SearchRep) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"` // 搜搜index
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{20}
}

func (x *SearchReq) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type SearchMovie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string    `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`   // 名字
	Id     string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`         // id
	Image  *Images   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`   // 图片
	Genres []*Genres `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres,omitempty"` // 类型
	Year   string    `protobuf:"bytes,5,opt,name=year,proto3" json:"year,omitempty"`     // 上映年份
	Rating *Rating   `protobuf:"bytes,6,opt,name=rating,proto3" json:"rating,omitempty"` // 评分
}

func (x *SearchMovie) Reset() {
	*x = SearchMovie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMovie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMovie) ProtoMessage() {}

func (x *SearchMovie) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMovie.ProtoReflect.Descriptor instead.
func (*SearchMovie) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{21}
}

func (x *SearchMovie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchMovie) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchMovie) GetImage() *Images {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *SearchMovie) GetGenres() []*Genres {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *SearchMovie) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *SearchMovie) GetRating() *Rating {
	if x != nil {
		return x.Rating
	}
	return nil
}

type Genres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // 电影类型
}

func (x *Genres) Reset() {
	*x = Genres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genres) ProtoMessage() {}

func (x *Genres) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genres.ProtoReflect.Descriptor instead.
func (*Genres) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{22}
}

func (x *Genres) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Average float32 `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"` // 评分
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{23}
}

func (x *Rating) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

type Images struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small string `protobuf:"bytes,1,opt,name=small,proto3" json:"small,omitempty"` // 图片
}

func (x *Images) Reset() {
	*x = Images{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Images) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Images) ProtoMessage() {}

func (x *Images) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Images.ProtoReflect.Descriptor instead.
func (*Images) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{24}
}

func (x *Images) GetSmall() string {
	if x != nil {
		return x.Small
	}
	return ""
}

type DayMovie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseTime     string  `protobuf:"bytes,1,opt,name=releaseTime,proto3" json:"releaseTime,omitempty"`           // 上映时间
	Length          int64   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`                    // 上映的时长
	ReleaseType     string  `protobuf:"bytes,3,opt,name=releaseType,proto3" json:"releaseType,omitempty"`           // 上映类型
	MhName          string  `protobuf:"bytes,4,opt,name=mhName,proto3" json:"mhName,omitempty"`                     // 厅的名字
	ReleaseDiscount float32 `protobuf:"fixed32,5,opt,name=releaseDiscount,proto3" json:"releaseDiscount,omitempty"` // 价格
	MovieId         int64   `protobuf:"varint,6,opt,name=movieId,proto3" json:"movieId,omitempty"`                  // 电影id
	MhId            int64   `protobuf:"varint,7,opt,name=mhId,proto3" json:"mhId,omitempty"`                        // 厅的id
	CinemaId        int64   `protobuf:"varint,8,opt,name=cinemaId,proto3" json:"cinemaId,omitempty"`                // 影院id
	FilmName        string  `protobuf:"bytes,9,opt,name=filmName,proto3" json:"filmName,omitempty"`                 // 影片名称
}

func (x *DayMovie) Reset() {
	*x = DayMovie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayMovie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayMovie) ProtoMessage() {}

func (x *DayMovie) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayMovie.ProtoReflect.Descriptor instead.
func (*DayMovie) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{25}
}

func (x *DayMovie) GetReleaseTime() string {
	if x != nil {
		return x.ReleaseTime
	}
	return ""
}

func (x *DayMovie) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *DayMovie) GetReleaseType() string {
	if x != nil {
		return x.ReleaseType
	}
	return ""
}

func (x *DayMovie) GetMhName() string {
	if x != nil {
		return x.MhName
	}
	return ""
}

func (x *DayMovie) GetReleaseDiscount() float32 {
	if x != nil {
		return x.ReleaseDiscount
	}
	return 0
}

func (x *DayMovie) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *DayMovie) GetMhId() int64 {
	if x != nil {
		return x.MhId
	}
	return 0
}

func (x *DayMovie) GetCinemaId() int64 {
	if x != nil {
		return x.CinemaId
	}
	return 0
}

func (x *DayMovie) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

type GetFilmsByCidADayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CinemaId int64 `protobuf:"varint,1,opt,name=cinemaId,proto3" json:"cinemaId,omitempty"` // 影院id
	FilmId   int64 `protobuf:"varint,2,opt,name=filmId,proto3" json:"filmId,omitempty"`     // 影片id
	DayNum   int64 `protobuf:"varint,3,opt,name=dayNum,proto3" json:"dayNum,omitempty"`     // 0：今天  1：明天  2：后天
}

func (x *GetFilmsByCidADayReq) Reset() {
	*x = GetFilmsByCidADayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilmsByCidADayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilmsByCidADayReq) ProtoMessage() {}

func (x *GetFilmsByCidADayReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilmsByCidADayReq.ProtoReflect.Descriptor instead.
func (*GetFilmsByCidADayReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{26}
}

func (x *GetFilmsByCidADayReq) GetCinemaId() int64 {
	if x != nil {
		return x.CinemaId
	}
	return 0
}

func (x *GetFilmsByCidADayReq) GetFilmId() int64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

func (x *GetFilmsByCidADayReq) GetDayNum() int64 {
	if x != nil {
		return x.DayNum
	}
	return 0
}

type GetFilmsByCidADayRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayMovie []*DayMovie `protobuf:"bytes,1,rep,name=dayMovie,proto3" json:"dayMovie,omitempty"` // 正在上映的影片
}

func (x *GetFilmsByCidADayRsp) Reset() {
	*x = GetFilmsByCidADayRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilmsByCidADayRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilmsByCidADayRsp) ProtoMessage() {}

func (x *GetFilmsByCidADayRsp) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilmsByCidADayRsp.ProtoReflect.Descriptor instead.
func (*GetFilmsByCidADayRsp) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{27}
}

func (x *GetFilmsByCidADayRsp) GetDayMovie() []*DayMovie {
	if x != nil {
		return x.DayMovie
	}
	return nil
}

var File_film_proto protoreflect.FileDescriptor

var file_film_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0x2e, 0x0a, 0x10, 0x48, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x22, 0x35, 0x0a, 0x10, 0x48, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x69, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x72, 0x61, 0x6d, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x22,
	0xba, 0x04, 0x0a, 0x08, 0x48, 0x6f, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x33, 0x44, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x73, 0x33, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x44, 0x4d, 0x41, 0x58, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x44, 0x4d,
	0x41, 0x58, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69,
	0x73, 0x48, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x49, 0x4d, 0x41, 0x58, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x49, 0x4d, 0x41, 0x58, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x73, 0x49, 0x4d, 0x41, 0x58, 0x33, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x73, 0x49, 0x4d, 0x41, 0x58, 0x33, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65,
	0x77, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x44, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x72, 0x44, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x59, 0x65, 0x61, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x59, 0x65,
	0x61, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x46,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x0c, 0x0a, 0x01, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6e, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x61,
	0x6e, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x77, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb6, 0x07, 0x0a,
	0x0e, 0x46, 0x69, 0x6c, 0x6d, 0x41, 0x6c, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x6f, 0x67, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4c, 0x6f, 0x6e, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4c, 0x6f, 0x6e, 0x67, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x53,
	0x65, 0x61, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x69, 0x6c, 0x6d, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77,
	0x72, 0x69, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x6c,
	0x6d, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x77, 0x72, 0x69, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x73, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x69, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x69, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x72, 0x61, 0x6d, 0x61,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x72, 0x61, 0x6d,
	0x61, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x66,
	0x69, 0x6c, 0x6d, 0x42, 0x6f, 0x78, 0x6f, 0x66, 0x66, 0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x6d, 0x42, 0x6f, 0x78, 0x6f, 0x66, 0x66, 0x69, 0x63,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x6d, 0x44, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b,
	0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6b, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x73, 0x73, 0x75,
	0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x79, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x33, 0x44, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x69, 0x73, 0x33, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44,
	0x4d, 0x41, 0x58, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x44, 0x4d, 0x41,
	0x58, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73,
	0x48, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x49, 0x4d, 0x41, 0x58, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x49, 0x4d, 0x41, 0x58, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x49, 0x4d, 0x41, 0x58, 0x33, 0x44, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69,
	0x73, 0x49, 0x4d, 0x41, 0x58, 0x33, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x44, 0x61, 0x79, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x72, 0x44, 0x61,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x59, 0x65,
	0x61, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x59, 0x65, 0x61, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x22, 0x4a, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x22, 0xc1, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x43, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x43, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x45, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x75, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x75, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x65, 0x22, 0x5d, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x25, 0x0a,
	0x03, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x03, 0x72, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x18, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x73, 0x52, 0x65, 0x70, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x69, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x45, 0x63, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x65,
	0x72, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e,
	0x73, 0x22, 0x87, 0x01, 0x0a, 0x07, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c,
	0x52, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x36, 0x0a, 0x11, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x12,
	0x21, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x6e,
	0x67, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x22, 0x36, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x43, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x70, 0x12, 0x21, 0x0a, 0x06,
	0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22,
	0x4e, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x12, 0x2b, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52,
	0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x19, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x20, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1c,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a, 0x06,
	0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x22, 0x1e, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6d,
	0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x22, 0x8e, 0x02, 0x0a, 0x08, 0x44, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x68, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x68, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x6d, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x6e,
	0x65, 0x6d, 0x61, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x69, 0x6e,
	0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x62, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x42, 0x79, 0x43,
	0x69, 0x64, 0x41, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x6e,
	0x65, 0x6d, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x69, 0x6e,
	0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d,
	0x73, 0x42, 0x79, 0x43, 0x69, 0x64, 0x41, 0x44, 0x61, 0x79, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a,
	0x08, 0x64, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x08, 0x64,
	0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x32, 0xdf, 0x01, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x6d,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x48, 0x6f,
	0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x48, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x48, 0x6f, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_film_proto_rawDescOnce sync.Once
	file_film_proto_rawDescData = file_film_proto_rawDesc
)

func file_film_proto_rawDescGZIP() []byte {
	file_film_proto_rawDescOnce.Do(func() {
		file_film_proto_rawDescData = protoimpl.X.CompressGZIP(file_film_proto_rawDescData)
	})
	return file_film_proto_rawDescData
}

var file_film_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_film_proto_goTypes = []interface{}{
	(*HotPlayMoviesReq)(nil),         // 0: pb.HotPlayMoviesReq
	(*HotPlayMoviesRep)(nil),         // 1: pb.HotPlayMoviesRep
	(*Movie)(nil),                    // 2: pb.Movie
	(*HotMovie)(nil),                 // 3: pb.HotMovie
	(*FilmAllMessage)(nil),           // 4: pb.FilmAllMessage
	(*MovieDetailReq)(nil),           // 5: pb.MovieDetailReq
	(*MovieDetailInfo)(nil),          // 6: pb.MovieDetailInfo
	(*MovieDetailRep)(nil),           // 7: pb.MovieDetailRep
	(*MovieCreditsWithTypesReq)(nil), // 8: pb.MovieCreditsWithTypesReq
	(*MovieCreditsWithTypesRep)(nil), // 9: pb.MovieCreditsWithTypesRep
	(*Type)(nil),                     // 10: pb.Type
	(*Persons)(nil),                  // 11: pb.Persons
	(*ImageAllReq)(nil),              // 12: pb.ImageAllReq
	(*ImageAllRep)(nil),              // 13: pb.ImageAllRep
	(*Image)(nil),                    // 14: pb.Image
	(*LocationMoviesReq)(nil),        // 15: pb.LocationMoviesReq
	(*LocationMoviesRep)(nil),        // 16: pb.LocationMoviesRep
	(*MovieComingNewReq)(nil),        // 17: pb.MovieComingNewReq
	(*MovieComingNewRep)(nil),        // 18: pb.MovieComingNewRep
	(*SearchRep)(nil),                // 19: pb.SearchRep
	(*SearchReq)(nil),                // 20: pb.SearchReq
	(*SearchMovie)(nil),              // 21: pb.SearchMovie
	(*Genres)(nil),                   // 22: pb.Genres
	(*Rating)(nil),                   // 23: pb.Rating
	(*Images)(nil),                   // 24: pb.Images
	(*DayMovie)(nil),                 // 25: pb.DayMovie
	(*GetFilmsByCidADayReq)(nil),     // 26: pb.GetFilmsByCidADayReq
	(*GetFilmsByCidADayRsp)(nil),     // 27: pb.GetFilmsByCidADayRsp
}
var file_film_proto_depIdxs = []int32{
	2,  // 0: pb.HotPlayMoviesRep.movies:type_name -> pb.Movie
	6,  // 1: pb.MovieDetailRep.res:type_name -> pb.MovieDetailInfo
	10, // 2: pb.MovieCreditsWithTypesRep.types:type_name -> pb.Type
	11, // 3: pb.Type.persons:type_name -> pb.Persons
	14, // 4: pb.ImageAllRep.images:type_name -> pb.Image
	2,  // 5: pb.LocationMoviesRep.movies:type_name -> pb.Movie
	2,  // 6: pb.MovieComingNewRep.movies:type_name -> pb.Movie
	21, // 7: pb.SearchRep.subjects:type_name -> pb.SearchMovie
	24, // 8: pb.SearchMovie.image:type_name -> pb.Images
	22, // 9: pb.SearchMovie.genres:type_name -> pb.Genres
	23, // 10: pb.SearchMovie.rating:type_name -> pb.Rating
	25, // 11: pb.GetFilmsByCidADayRsp.dayMovie:type_name -> pb.DayMovie
	0,  // 12: pb.FilmServiceExt.HotPlayMovies:input_type -> pb.HotPlayMoviesReq
	5,  // 13: pb.FilmServiceExt.MovieDetail:input_type -> pb.MovieDetailReq
	8,  // 14: pb.FilmServiceExt.MovieCreditsWithTypes:input_type -> pb.MovieCreditsWithTypesReq
	1,  // 15: pb.FilmServiceExt.HotPlayMovies:output_type -> pb.HotPlayMoviesRep
	7,  // 16: pb.FilmServiceExt.MovieDetail:output_type -> pb.MovieDetailRep
	9,  // 17: pb.FilmServiceExt.MovieCreditsWithTypes:output_type -> pb.MovieCreditsWithTypesRep
	15, // [15:18] is the sub-list for method output_type
	12, // [12:15] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_film_proto_init() }
func file_film_proto_init() {
	if File_film_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_film_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotPlayMoviesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotPlayMoviesRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Movie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HotMovie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilmAllMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCreditsWithTypesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCreditsWithTypesRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Persons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageAllRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMoviesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMoviesRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieComingNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieComingNewRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMovie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Images); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayMovie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilmsByCidADayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilmsByCidADayRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_film_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_film_proto_goTypes,
		DependencyIndexes: file_film_proto_depIdxs,
		MessageInfos:      file_film_proto_msgTypes,
	}.Build()
	File_film_proto = out.File
	file_film_proto_rawDesc = nil
	file_film_proto_goTypes = nil
	file_film_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FilmServiceExtClient is the client API for FilmServiceExt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilmServiceExtClient interface {
	// 获取正在售票的影片
	HotPlayMovies(ctx context.Context, in *HotPlayMoviesReq, opts ...grpc.CallOption) (*HotPlayMoviesRep, error)
	// 电影详情
	MovieDetail(ctx context.Context, in *MovieDetailReq, opts ...grpc.CallOption) (*MovieDetailRep, error)
	// 获取导演与演员信息
	MovieCreditsWithTypes(ctx context.Context, in *MovieCreditsWithTypesReq, opts ...grpc.CallOption) (*MovieCreditsWithTypesRep, error)
}

type filmServiceExtClient struct {
	cc grpc.ClientConnInterface
}

func NewFilmServiceExtClient(cc grpc.ClientConnInterface) FilmServiceExtClient {
	return &filmServiceExtClient{cc}
}

func (c *filmServiceExtClient) HotPlayMovies(ctx context.Context, in *HotPlayMoviesReq, opts ...grpc.CallOption) (*HotPlayMoviesRep, error) {
	out := new(HotPlayMoviesRep)
	err := c.cc.Invoke(ctx, "/pb.FilmServiceExt/HotPlayMovies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmServiceExtClient) MovieDetail(ctx context.Context, in *MovieDetailReq, opts ...grpc.CallOption) (*MovieDetailRep, error) {
	out := new(MovieDetailRep)
	err := c.cc.Invoke(ctx, "/pb.FilmServiceExt/MovieDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmServiceExtClient) MovieCreditsWithTypes(ctx context.Context, in *MovieCreditsWithTypesReq, opts ...grpc.CallOption) (*MovieCreditsWithTypesRep, error) {
	out := new(MovieCreditsWithTypesRep)
	err := c.cc.Invoke(ctx, "/pb.FilmServiceExt/MovieCreditsWithTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilmServiceExtServer is the server API for FilmServiceExt service.
type FilmServiceExtServer interface {
	// 获取正在售票的影片
	HotPlayMovies(context.Context, *HotPlayMoviesReq) (*HotPlayMoviesRep, error)
	// 电影详情
	MovieDetail(context.Context, *MovieDetailReq) (*MovieDetailRep, error)
	// 获取导演与演员信息
	MovieCreditsWithTypes(context.Context, *MovieCreditsWithTypesReq) (*MovieCreditsWithTypesRep, error)
}

// UnimplementedFilmServiceExtServer can be embedded to have forward compatible implementations.
type UnimplementedFilmServiceExtServer struct {
}

func (*UnimplementedFilmServiceExtServer) HotPlayMovies(context.Context, *HotPlayMoviesReq) (*HotPlayMoviesRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HotPlayMovies not implemented")
}
func (*UnimplementedFilmServiceExtServer) MovieDetail(context.Context, *MovieDetailReq) (*MovieDetailRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MovieDetail not implemented")
}
func (*UnimplementedFilmServiceExtServer) MovieCreditsWithTypes(context.Context, *MovieCreditsWithTypesReq) (*MovieCreditsWithTypesRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MovieCreditsWithTypes not implemented")
}

func RegisterFilmServiceExtServer(s *grpc.Server, srv FilmServiceExtServer) {
	s.RegisterService(&_FilmServiceExt_serviceDesc, srv)
}

func _FilmServiceExt_HotPlayMovies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HotPlayMoviesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmServiceExtServer).HotPlayMovies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FilmServiceExt/HotPlayMovies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmServiceExtServer).HotPlayMovies(ctx, req.(*HotPlayMoviesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmServiceExt_MovieDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovieDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmServiceExtServer).MovieDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FilmServiceExt/MovieDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmServiceExtServer).MovieDetail(ctx, req.(*MovieDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmServiceExt_MovieCreditsWithTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovieCreditsWithTypesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmServiceExtServer).MovieCreditsWithTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FilmServiceExt/MovieCreditsWithTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmServiceExtServer).MovieCreditsWithTypes(ctx, req.(*MovieCreditsWithTypesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilmServiceExt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FilmServiceExt",
	HandlerType: (*FilmServiceExtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HotPlayMovies",
			Handler:    _FilmServiceExt_HotPlayMovies_Handler,
		},
		{
			MethodName: "MovieDetail",
			Handler:    _FilmServiceExt_MovieDetail_Handler,
		},
		{
			MethodName: "MovieCreditsWithTypes",
			Handler:    _FilmServiceExt_MovieCreditsWithTypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "film.proto",
}
