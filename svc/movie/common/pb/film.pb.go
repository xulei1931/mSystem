// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.21.0
// 	protoc        v3.12.1
// source: film.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MovieDetailInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`        // 演员名字
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`            //
	Cover      string `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`        //
	Rate       string `protobuf:"bytes,4,opt,name=rate,proto3" json:"rate,omitempty"`          // 影片logo
	PlayAble   int64  `protobuf:"varint,5,opt,name=playAble,proto3" json:"playAble,omitempty"` // 是否3D
	IsNew      int64  `protobuf:"varint,6,opt,name=isNew,proto3" json:"isNew,omitempty"`       // 是否DMAX
	IsFilter   int64  `protobuf:"varint,7,opt,name=isFilter,proto3" json:"isFilter,omitempty"` // 是否过滤
	MovieId    int64  `protobuf:"varint,8,opt,name=movieId,proto3" json:"movieId,omitempty"`   // 是否热映
	TagId      int64  `protobuf:"varint,9,opt,name=tagId,proto3" json:"tagId,omitempty"`
	CreateTime int64  `protobuf:"varint,10,opt,name=createTime,proto3" json:"createTime,omitempty"` // 上映日期
}

func (x *MovieDetailInfo) Reset() {
	*x = MovieDetailInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailInfo) ProtoMessage() {}

func (x *MovieDetailInfo) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailInfo.ProtoReflect.Descriptor instead.
func (*MovieDetailInfo) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{0}
}

func (x *MovieDetailInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MovieDetailInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MovieDetailInfo) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *MovieDetailInfo) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *MovieDetailInfo) GetPlayAble() int64 {
	if x != nil {
		return x.PlayAble
	}
	return 0
}

func (x *MovieDetailInfo) GetIsNew() int64 {
	if x != nil {
		return x.IsNew
	}
	return 0
}

func (x *MovieDetailInfo) GetIsFilter() int64 {
	if x != nil {
		return x.IsFilter
	}
	return 0
}

func (x *MovieDetailInfo) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *MovieDetailInfo) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *MovieDetailInfo) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type MovieDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationId int64 `protobuf:"varint,1,opt,name=locationId,proto3" json:"locationId,omitempty"`
	MovieId    int64 `protobuf:"varint,2,opt,name=movieId,proto3" json:"movieId,omitempty"`
}

func (x *MovieDetailReq) Reset() {
	*x = MovieDetailReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailReq) ProtoMessage() {}

func (x *MovieDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailReq.ProtoReflect.Descriptor instead.
func (*MovieDetailReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{1}
}

func (x *MovieDetailReq) GetLocationId() int64 {
	if x != nil {
		return x.LocationId
	}
	return 0
}

func (x *MovieDetailReq) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type MovieDetailRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int64            `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Err  string           `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	Res  *MovieDetailInfo `protobuf:"bytes,3,opt,name=res,proto3" json:"res,omitempty"`
}

func (x *MovieDetailRep) Reset() {
	*x = MovieDetailRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieDetailRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieDetailRep) ProtoMessage() {}

func (x *MovieDetailRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieDetailRep.ProtoReflect.Descriptor instead.
func (*MovieDetailRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{2}
}

func (x *MovieDetailRep) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MovieDetailRep) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *MovieDetailRep) GetRes() *MovieDetailInfo {
	if x != nil {
		return x.Res
	}
	return nil
}

type MovieCreditsWithTypesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int64 `protobuf:"varint,1,opt,name=MovieId,proto3" json:"MovieId,omitempty"`
}

func (x *MovieCreditsWithTypesReq) Reset() {
	*x = MovieCreditsWithTypesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCreditsWithTypesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCreditsWithTypesReq) ProtoMessage() {}

func (x *MovieCreditsWithTypesReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCreditsWithTypesReq.ProtoReflect.Descriptor instead.
func (*MovieCreditsWithTypesReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{3}
}

func (x *MovieCreditsWithTypesReq) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type MovieCreditsWithTypesRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Types []*Type `protobuf:"bytes,1,rep,name=types,proto3" json:"types,omitempty"`
}

func (x *MovieCreditsWithTypesRep) Reset() {
	*x = MovieCreditsWithTypesRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieCreditsWithTypesRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieCreditsWithTypesRep) ProtoMessage() {}

func (x *MovieCreditsWithTypesRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieCreditsWithTypesRep.ProtoReflect.Descriptor instead.
func (*MovieCreditsWithTypesRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{4}
}

func (x *MovieCreditsWithTypesRep) GetTypes() []*Type {
	if x != nil {
		return x.Types
	}
	return nil
}

type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName   string     `protobuf:"bytes,1,opt,name=typeName,proto3" json:"typeName,omitempty"`
	TypeNameEc string     `protobuf:"bytes,2,opt,name=typeNameEc,proto3" json:"typeNameEc,omitempty"`
	Persons    []*Persons `protobuf:"bytes,3,rep,name=persons,proto3" json:"persons,omitempty"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{5}
}

func (x *Type) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Type) GetTypeNameEc() string {
	if x != nil {
		return x.TypeNameEc
	}
	return ""
}

func (x *Type) GetPersons() []*Persons {
	if x != nil {
		return x.Persons
	}
	return nil
}

type Persons struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image     string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NameEn    string `protobuf:"bytes,3,opt,name=nameEn,proto3" json:"nameEn,omitempty"`
	RoleCover string `protobuf:"bytes,4,opt,name=roleCover,proto3" json:"roleCover,omitempty"`
	Personate string `protobuf:"bytes,5,opt,name=personate,proto3" json:"personate,omitempty"`
}

func (x *Persons) Reset() {
	*x = Persons{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Persons) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Persons) ProtoMessage() {}

func (x *Persons) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Persons.ProtoReflect.Descriptor instead.
func (*Persons) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{6}
}

func (x *Persons) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Persons) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Persons) GetNameEn() string {
	if x != nil {
		return x.NameEn
	}
	return ""
}

func (x *Persons) GetRoleCover() string {
	if x != nil {
		return x.RoleCover
	}
	return ""
}

func (x *Persons) GetPersonate() string {
	if x != nil {
		return x.Personate
	}
	return ""
}

type ImageAllReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovieId int64 `protobuf:"varint,2,opt,name=movieId,proto3" json:"movieId,omitempty"`
}

func (x *ImageAllReq) Reset() {
	*x = ImageAllReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageAllReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageAllReq) ProtoMessage() {}

func (x *ImageAllReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageAllReq.ProtoReflect.Descriptor instead.
func (*ImageAllReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{7}
}

func (x *ImageAllReq) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

type ImageAllRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *ImageAllRep) Reset() {
	*x = ImageAllRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageAllRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageAllRep) ProtoMessage() {}

func (x *ImageAllRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageAllRep.ProtoReflect.Descriptor instead.
func (*ImageAllRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{8}
}

func (x *ImageAllRep) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image string `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{9}
}

func (x *Image) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type LocationMoviesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LocationMoviesReq) Reset() {
	*x = LocationMoviesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMoviesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMoviesReq) ProtoMessage() {}

func (x *LocationMoviesReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMoviesReq.ProtoReflect.Descriptor instead.
func (*LocationMoviesReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{10}
}

type LocationMoviesRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*MovieDetailInfo `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"` // 正在上映的影片
}

func (x *LocationMoviesRep) Reset() {
	*x = LocationMoviesRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationMoviesRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationMoviesRep) ProtoMessage() {}

func (x *LocationMoviesRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationMoviesRep.ProtoReflect.Descriptor instead.
func (*LocationMoviesRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{11}
}

func (x *LocationMoviesRep) GetMovies() []*MovieDetailInfo {
	if x != nil {
		return x.Movies
	}
	return nil
}

type MovieComingNewReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MovieComingNewReq) Reset() {
	*x = MovieComingNewReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieComingNewReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieComingNewReq) ProtoMessage() {}

func (x *MovieComingNewReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieComingNewReq.ProtoReflect.Descriptor instead.
func (*MovieComingNewReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{12}
}

type MovieComingNewRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movies []*MovieDetailInfo `protobuf:"bytes,1,rep,name=movies,proto3" json:"movies,omitempty"` // 正在上映的影片
}

func (x *MovieComingNewRep) Reset() {
	*x = MovieComingNewRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovieComingNewRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovieComingNewRep) ProtoMessage() {}

func (x *MovieComingNewRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovieComingNewRep.ProtoReflect.Descriptor instead.
func (*MovieComingNewRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{13}
}

func (x *MovieComingNewRep) GetMovies() []*MovieDetailInfo {
	if x != nil {
		return x.Movies
	}
	return nil
}

type SearchRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subjects []*SearchMovie `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"` // 搜索的列表
	Total    int64          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // 列表总数
}

func (x *SearchRep) Reset() {
	*x = SearchRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRep) ProtoMessage() {}

func (x *SearchRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRep.ProtoReflect.Descriptor instead.
func (*SearchRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{14}
}

func (x *SearchRep) GetSubjects() []*SearchMovie {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *SearchRep) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Q string `protobuf:"bytes,1,opt,name=q,proto3" json:"q,omitempty"` // 搜搜index
}

func (x *SearchReq) Reset() {
	*x = SearchReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchReq) ProtoMessage() {}

func (x *SearchReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchReq.ProtoReflect.Descriptor instead.
func (*SearchReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{15}
}

func (x *SearchReq) GetQ() string {
	if x != nil {
		return x.Q
	}
	return ""
}

type SearchMovie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string    `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`   // 名字
	Id     string    `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`         // id
	Image  *Images   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`   // 图片
	Genres []*Genres `protobuf:"bytes,4,rep,name=genres,proto3" json:"genres,omitempty"` // 类型
	Year   string    `protobuf:"bytes,5,opt,name=year,proto3" json:"year,omitempty"`     // 上映年份
	Rating *Rating   `protobuf:"bytes,6,opt,name=rating,proto3" json:"rating,omitempty"` // 评分
}

func (x *SearchMovie) Reset() {
	*x = SearchMovie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMovie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMovie) ProtoMessage() {}

func (x *SearchMovie) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMovie.ProtoReflect.Descriptor instead.
func (*SearchMovie) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{16}
}

func (x *SearchMovie) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchMovie) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchMovie) GetImage() *Images {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *SearchMovie) GetGenres() []*Genres {
	if x != nil {
		return x.Genres
	}
	return nil
}

func (x *SearchMovie) GetYear() string {
	if x != nil {
		return x.Year
	}
	return ""
}

func (x *SearchMovie) GetRating() *Rating {
	if x != nil {
		return x.Rating
	}
	return nil
}

type Genres struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"` // 电影类型
}

func (x *Genres) Reset() {
	*x = Genres{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Genres) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Genres) ProtoMessage() {}

func (x *Genres) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Genres.ProtoReflect.Descriptor instead.
func (*Genres) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{17}
}

func (x *Genres) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type Rating struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Average float32 `protobuf:"fixed32,1,opt,name=average,proto3" json:"average,omitempty"` // 评分
}

func (x *Rating) Reset() {
	*x = Rating{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rating) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rating) ProtoMessage() {}

func (x *Rating) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rating.ProtoReflect.Descriptor instead.
func (*Rating) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{18}
}

func (x *Rating) GetAverage() float32 {
	if x != nil {
		return x.Average
	}
	return 0
}

type Images struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Small string `protobuf:"bytes,1,opt,name=small,proto3" json:"small,omitempty"` // 图片
}

func (x *Images) Reset() {
	*x = Images{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Images) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Images) ProtoMessage() {}

func (x *Images) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Images.ProtoReflect.Descriptor instead.
func (*Images) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{19}
}

func (x *Images) GetSmall() string {
	if x != nil {
		return x.Small
	}
	return ""
}

type DayMovie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReleaseTime     string  `protobuf:"bytes,1,opt,name=releaseTime,proto3" json:"releaseTime,omitempty"`           // 上映时间
	Length          int64   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`                    // 上映的时长
	ReleaseType     string  `protobuf:"bytes,3,opt,name=releaseType,proto3" json:"releaseType,omitempty"`           // 上映类型
	MhName          string  `protobuf:"bytes,4,opt,name=mhName,proto3" json:"mhName,omitempty"`                     // 厅的名字
	ReleaseDiscount float32 `protobuf:"fixed32,5,opt,name=releaseDiscount,proto3" json:"releaseDiscount,omitempty"` // 价格
	MovieId         int64   `protobuf:"varint,6,opt,name=movieId,proto3" json:"movieId,omitempty"`                  // 电影id
	MhId            int64   `protobuf:"varint,7,opt,name=mhId,proto3" json:"mhId,omitempty"`                        // 厅的id
	CinemaId        int64   `protobuf:"varint,8,opt,name=cinemaId,proto3" json:"cinemaId,omitempty"`                // 影院id
	FilmName        string  `protobuf:"bytes,9,opt,name=filmName,proto3" json:"filmName,omitempty"`                 // 影片名称
}

func (x *DayMovie) Reset() {
	*x = DayMovie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DayMovie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DayMovie) ProtoMessage() {}

func (x *DayMovie) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DayMovie.ProtoReflect.Descriptor instead.
func (*DayMovie) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{20}
}

func (x *DayMovie) GetReleaseTime() string {
	if x != nil {
		return x.ReleaseTime
	}
	return ""
}

func (x *DayMovie) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *DayMovie) GetReleaseType() string {
	if x != nil {
		return x.ReleaseType
	}
	return ""
}

func (x *DayMovie) GetMhName() string {
	if x != nil {
		return x.MhName
	}
	return ""
}

func (x *DayMovie) GetReleaseDiscount() float32 {
	if x != nil {
		return x.ReleaseDiscount
	}
	return 0
}

func (x *DayMovie) GetMovieId() int64 {
	if x != nil {
		return x.MovieId
	}
	return 0
}

func (x *DayMovie) GetMhId() int64 {
	if x != nil {
		return x.MhId
	}
	return 0
}

func (x *DayMovie) GetCinemaId() int64 {
	if x != nil {
		return x.CinemaId
	}
	return 0
}

func (x *DayMovie) GetFilmName() string {
	if x != nil {
		return x.FilmName
	}
	return ""
}

type GetFilmsByCidADayReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CinemaId int64 `protobuf:"varint,1,opt,name=cinemaId,proto3" json:"cinemaId,omitempty"` // 影院id
	FilmId   int64 `protobuf:"varint,2,opt,name=filmId,proto3" json:"filmId,omitempty"`     // 影片id
	DayNum   int64 `protobuf:"varint,3,opt,name=dayNum,proto3" json:"dayNum,omitempty"`     // 0：今天  1：明天  2：后天
}

func (x *GetFilmsByCidADayReq) Reset() {
	*x = GetFilmsByCidADayReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilmsByCidADayReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilmsByCidADayReq) ProtoMessage() {}

func (x *GetFilmsByCidADayReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilmsByCidADayReq.ProtoReflect.Descriptor instead.
func (*GetFilmsByCidADayReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{21}
}

func (x *GetFilmsByCidADayReq) GetCinemaId() int64 {
	if x != nil {
		return x.CinemaId
	}
	return 0
}

func (x *GetFilmsByCidADayReq) GetFilmId() int64 {
	if x != nil {
		return x.FilmId
	}
	return 0
}

func (x *GetFilmsByCidADayReq) GetDayNum() int64 {
	if x != nil {
		return x.DayNum
	}
	return 0
}

type GetFilmsByCidADayRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DayMovie []*DayMovie `protobuf:"bytes,1,rep,name=dayMovie,proto3" json:"dayMovie,omitempty"` // 正在上映的影片
}

func (x *GetFilmsByCidADayRsp) Reset() {
	*x = GetFilmsByCidADayRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilmsByCidADayRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilmsByCidADayRsp) ProtoMessage() {}

func (x *GetFilmsByCidADayRsp) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilmsByCidADayRsp.ProtoReflect.Descriptor instead.
func (*GetFilmsByCidADayRsp) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{22}
}

func (x *GetFilmsByCidADayRsp) GetDayMovie() []*DayMovie {
	if x != nil {
		return x.DayMovie
	}
	return nil
}

type MoviesListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int64 `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Page  int64 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *MoviesListReq) Reset() {
	*x = MoviesListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoviesListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoviesListReq) ProtoMessage() {}

func (x *MoviesListReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoviesListReq.ProtoReflect.Descriptor instead.
func (*MoviesListReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{23}
}

func (x *MoviesListReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *MoviesListReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *MoviesListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type MoviesListsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code  int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Error string             `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Count int32              `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	List  []*MovieDetailInfo `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MoviesListsRep) Reset() {
	*x = MoviesListsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoviesListsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoviesListsRep) ProtoMessage() {}

func (x *MoviesListsRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoviesListsRep.ProtoReflect.Descriptor instead.
func (*MoviesListsRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{24}
}

func (x *MoviesListsRep) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MoviesListsRep) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *MoviesListsRep) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *MoviesListsRep) GetList() []*MovieDetailInfo {
	if x != nil {
		return x.List
	}
	return nil
}

type MoviesTagsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId int32 `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *MoviesTagsReq) Reset() {
	*x = MoviesTagsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoviesTagsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoviesTagsReq) ProtoMessage() {}

func (x *MoviesTagsReq) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoviesTagsReq.ProtoReflect.Descriptor instead.
func (*MoviesTagsReq) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{25}
}

func (x *MoviesTagsReq) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type TagsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TagId    int32  `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	CateName string `protobuf:"bytes,2,opt,name=cateName,proto3" json:"cateName,omitempty"`
	Sort     int32  `protobuf:"varint,3,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *TagsInfo) Reset() {
	*x = TagsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagsInfo) ProtoMessage() {}

func (x *TagsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagsInfo.ProtoReflect.Descriptor instead.
func (*TagsInfo) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{26}
}

func (x *TagsInfo) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *TagsInfo) GetCateName() string {
	if x != nil {
		return x.CateName
	}
	return ""
}

func (x *TagsInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

type MoviesTagsRep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Err  string      `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	List []*TagsInfo `protobuf:"bytes,4,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *MoviesTagsRep) Reset() {
	*x = MoviesTagsRep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_film_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoviesTagsRep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoviesTagsRep) ProtoMessage() {}

func (x *MoviesTagsRep) ProtoReflect() protoreflect.Message {
	mi := &file_film_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoviesTagsRep.ProtoReflect.Descriptor instead.
func (*MoviesTagsRep) Descriptor() ([]byte, []int) {
	return file_film_proto_rawDescGZIP(), []int{27}
}

func (x *MoviesTagsRep) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MoviesTagsRep) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *MoviesTagsRep) GetList() []*TagsInfo {
	if x != nil {
		return x.List
	}
	return nil
}

var File_film_proto protoreflect.FileDescriptor

var file_film_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62,
	0x22, 0x81, 0x02, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x62,
	0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x41, 0x62,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x22, 0x5d, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x25, 0x0a, 0x03, 0x72, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x72, 0x65, 0x73, 0x22,
	0x34, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x57,
	0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x18, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72,
	0x65, 0x64, 0x69, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x12, 0x1e, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x22, 0x69, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x45, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x45, 0x63, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x73, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x22, 0x87, 0x01, 0x0a,
	0x07, 0x50, 0x65, 0x72, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x6d, 0x65, 0x45, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f,
	0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x6f, 0x6c, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65, 0x72, 0x73,
	0x6f, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x65, 0x72,
	0x73, 0x6f, 0x6e, 0x61, 0x74, 0x65, 0x22, 0x27, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x49, 0x64, 0x22,
	0x30, 0x0a, 0x0b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x12, 0x21,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x22, 0x1d, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x22, 0x13, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x76, 0x69,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x22, 0x40, 0x0a, 0x11, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22, 0x13, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x43, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x22, 0x40, 0x0a, 0x11,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x6f, 0x6d, 0x69, 0x6e, 0x67, 0x4e, 0x65, 0x77, 0x52, 0x65,
	0x70, 0x12, 0x2b, 0x0a, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x22, 0x4e,
	0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x12, 0x2b, 0x0a, 0x08, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x19,
	0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x12, 0x0c, 0x0a, 0x01, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x71, 0x22, 0xb1, 0x01, 0x0a, 0x0b, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a,
	0x2e, 0x70, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x12, 0x22, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x52, 0x06, 0x67,
	0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x79, 0x65, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x1c, 0x0a,
	0x06, 0x47, 0x65, 0x6e, 0x72, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x22, 0x0a, 0x06, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x22,
	0x1e, 0x0a, 0x06, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6d, 0x61,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x22,
	0x8e, 0x02, 0x0a, 0x08, 0x44, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x68, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x68, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f,
	0x76, 0x69, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x6f, 0x76,
	0x69, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x68, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x6d, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x6e, 0x65,
	0x6d, 0x61, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x69, 0x6e, 0x65,
	0x6d, 0x61, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x62, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x73, 0x42, 0x79, 0x43, 0x69,
	0x64, 0x41, 0x44, 0x61, 0x79, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x69, 0x6e, 0x65,
	0x6d, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x69, 0x6e, 0x65,
	0x6d, 0x61, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61,
	0x79, 0x4e, 0x75, 0x6d, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x6d, 0x73,
	0x42, 0x79, 0x43, 0x69, 0x64, 0x41, 0x44, 0x61, 0x79, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08,
	0x64, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x52, 0x08, 0x64, 0x61,
	0x79, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x22, 0x4f, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x69, 0x65,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x25, 0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x54, 0x61, 0x67, 0x73,
	0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x08, 0x54, 0x61, 0x67,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x57, 0x0a, 0x0d, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x32, 0x92, 0x02, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x6d, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x54, 0x61, 0x67, 0x73, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12,
	0x38, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x73, 0x52, 0x65, 0x70, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0b, 0x4d, 0x6f, 0x76,
	0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x6f,
	0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x70,
	0x22, 0x00, 0x12, 0x55, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x6f, 0x76, 0x69, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x52, 0x65, 0x70, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_film_proto_rawDescOnce sync.Once
	file_film_proto_rawDescData = file_film_proto_rawDesc
)

func file_film_proto_rawDescGZIP() []byte {
	file_film_proto_rawDescOnce.Do(func() {
		file_film_proto_rawDescData = protoimpl.X.CompressGZIP(file_film_proto_rawDescData)
	})
	return file_film_proto_rawDescData
}

var file_film_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_film_proto_goTypes = []interface{}{
	(*MovieDetailInfo)(nil),          // 0: pb.MovieDetailInfo
	(*MovieDetailReq)(nil),           // 1: pb.MovieDetailReq
	(*MovieDetailRep)(nil),           // 2: pb.MovieDetailRep
	(*MovieCreditsWithTypesReq)(nil), // 3: pb.MovieCreditsWithTypesReq
	(*MovieCreditsWithTypesRep)(nil), // 4: pb.MovieCreditsWithTypesRep
	(*Type)(nil),                     // 5: pb.Type
	(*Persons)(nil),                  // 6: pb.Persons
	(*ImageAllReq)(nil),              // 7: pb.ImageAllReq
	(*ImageAllRep)(nil),              // 8: pb.ImageAllRep
	(*Image)(nil),                    // 9: pb.Image
	(*LocationMoviesReq)(nil),        // 10: pb.LocationMoviesReq
	(*LocationMoviesRep)(nil),        // 11: pb.LocationMoviesRep
	(*MovieComingNewReq)(nil),        // 12: pb.MovieComingNewReq
	(*MovieComingNewRep)(nil),        // 13: pb.MovieComingNewRep
	(*SearchRep)(nil),                // 14: pb.SearchRep
	(*SearchReq)(nil),                // 15: pb.SearchReq
	(*SearchMovie)(nil),              // 16: pb.SearchMovie
	(*Genres)(nil),                   // 17: pb.Genres
	(*Rating)(nil),                   // 18: pb.Rating
	(*Images)(nil),                   // 19: pb.Images
	(*DayMovie)(nil),                 // 20: pb.DayMovie
	(*GetFilmsByCidADayReq)(nil),     // 21: pb.GetFilmsByCidADayReq
	(*GetFilmsByCidADayRsp)(nil),     // 22: pb.GetFilmsByCidADayRsp
	(*MoviesListReq)(nil),            // 23: pb.MoviesListReq
	(*MoviesListsRep)(nil),           // 24: pb.MoviesListsRep
	(*MoviesTagsReq)(nil),            // 25: pb.MoviesTagsReq
	(*TagsInfo)(nil),                 // 26: pb.TagsInfo
	(*MoviesTagsRep)(nil),            // 27: pb.MoviesTagsRep
}
var file_film_proto_depIdxs = []int32{
	0,  // 0: pb.MovieDetailRep.res:type_name -> pb.MovieDetailInfo
	5,  // 1: pb.MovieCreditsWithTypesRep.types:type_name -> pb.Type
	6,  // 2: pb.Type.persons:type_name -> pb.Persons
	9,  // 3: pb.ImageAllRep.images:type_name -> pb.Image
	0,  // 4: pb.LocationMoviesRep.movies:type_name -> pb.MovieDetailInfo
	0,  // 5: pb.MovieComingNewRep.movies:type_name -> pb.MovieDetailInfo
	16, // 6: pb.SearchRep.subjects:type_name -> pb.SearchMovie
	19, // 7: pb.SearchMovie.image:type_name -> pb.Images
	17, // 8: pb.SearchMovie.genres:type_name -> pb.Genres
	18, // 9: pb.SearchMovie.rating:type_name -> pb.Rating
	20, // 10: pb.GetFilmsByCidADayRsp.dayMovie:type_name -> pb.DayMovie
	0,  // 11: pb.MoviesListsRep.list:type_name -> pb.MovieDetailInfo
	26, // 12: pb.MoviesTagsRep.list:type_name -> pb.TagsInfo
	25, // 13: pb.FilmServiceExt.GetMovieTags:input_type -> pb.MoviesTagsReq
	23, // 14: pb.FilmServiceExt.GetMoviesList:input_type -> pb.MoviesListReq
	1,  // 15: pb.FilmServiceExt.MovieDetail:input_type -> pb.MovieDetailReq
	3,  // 16: pb.FilmServiceExt.MovieCreditsWithTypes:input_type -> pb.MovieCreditsWithTypesReq
	27, // 17: pb.FilmServiceExt.GetMovieTags:output_type -> pb.MoviesTagsRep
	24, // 18: pb.FilmServiceExt.GetMoviesList:output_type -> pb.MoviesListsRep
	2,  // 19: pb.FilmServiceExt.MovieDetail:output_type -> pb.MovieDetailRep
	4,  // 20: pb.FilmServiceExt.MovieCreditsWithTypes:output_type -> pb.MovieCreditsWithTypesRep
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_film_proto_init() }
func file_film_proto_init() {
	if File_film_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_film_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieDetailRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCreditsWithTypesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieCreditsWithTypesRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Persons); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageAllReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageAllRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMoviesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationMoviesRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieComingNewReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovieComingNewRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMovie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Genres); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rating); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Images); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DayMovie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilmsByCidADayReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilmsByCidADayRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoviesListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoviesListsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoviesTagsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_film_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoviesTagsRep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_film_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_film_proto_goTypes,
		DependencyIndexes: file_film_proto_depIdxs,
		MessageInfos:      file_film_proto_msgTypes,
	}.Build()
	File_film_proto = out.File
	file_film_proto_rawDesc = nil
	file_film_proto_goTypes = nil
	file_film_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FilmServiceExtClient is the client API for FilmServiceExt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilmServiceExtClient interface {
	// 获取电影分类
	GetMovieTags(ctx context.Context, in *MoviesTagsReq, opts ...grpc.CallOption) (*MoviesTagsRep, error)
	// 获取影片
	GetMoviesList(ctx context.Context, in *MoviesListReq, opts ...grpc.CallOption) (*MoviesListsRep, error)
	// 电影详情
	MovieDetail(ctx context.Context, in *MovieDetailReq, opts ...grpc.CallOption) (*MovieDetailRep, error)
	// 获取导演与演员信息
	MovieCreditsWithTypes(ctx context.Context, in *MovieCreditsWithTypesReq, opts ...grpc.CallOption) (*MovieCreditsWithTypesRep, error)
}

type filmServiceExtClient struct {
	cc grpc.ClientConnInterface
}

func NewFilmServiceExtClient(cc grpc.ClientConnInterface) FilmServiceExtClient {
	return &filmServiceExtClient{cc}
}

func (c *filmServiceExtClient) GetMovieTags(ctx context.Context, in *MoviesTagsReq, opts ...grpc.CallOption) (*MoviesTagsRep, error) {
	out := new(MoviesTagsRep)
	err := c.cc.Invoke(ctx, "/pb.FilmServiceExt/GetMovieTags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmServiceExtClient) GetMoviesList(ctx context.Context, in *MoviesListReq, opts ...grpc.CallOption) (*MoviesListsRep, error) {
	out := new(MoviesListsRep)
	err := c.cc.Invoke(ctx, "/pb.FilmServiceExt/GetMoviesList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmServiceExtClient) MovieDetail(ctx context.Context, in *MovieDetailReq, opts ...grpc.CallOption) (*MovieDetailRep, error) {
	out := new(MovieDetailRep)
	err := c.cc.Invoke(ctx, "/pb.FilmServiceExt/MovieDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filmServiceExtClient) MovieCreditsWithTypes(ctx context.Context, in *MovieCreditsWithTypesReq, opts ...grpc.CallOption) (*MovieCreditsWithTypesRep, error) {
	out := new(MovieCreditsWithTypesRep)
	err := c.cc.Invoke(ctx, "/pb.FilmServiceExt/MovieCreditsWithTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilmServiceExtServer is the server API for FilmServiceExt service.
type FilmServiceExtServer interface {
	// 获取电影分类
	GetMovieTags(context.Context, *MoviesTagsReq) (*MoviesTagsRep, error)
	// 获取影片
	GetMoviesList(context.Context, *MoviesListReq) (*MoviesListsRep, error)
	// 电影详情
	MovieDetail(context.Context, *MovieDetailReq) (*MovieDetailRep, error)
	// 获取导演与演员信息
	MovieCreditsWithTypes(context.Context, *MovieCreditsWithTypesReq) (*MovieCreditsWithTypesRep, error)
}

// UnimplementedFilmServiceExtServer can be embedded to have forward compatible implementations.
type UnimplementedFilmServiceExtServer struct {
}

func (*UnimplementedFilmServiceExtServer) GetMovieTags(context.Context, *MoviesTagsReq) (*MoviesTagsRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovieTags not implemented")
}
func (*UnimplementedFilmServiceExtServer) GetMoviesList(context.Context, *MoviesListReq) (*MoviesListsRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMoviesList not implemented")
}
func (*UnimplementedFilmServiceExtServer) MovieDetail(context.Context, *MovieDetailReq) (*MovieDetailRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MovieDetail not implemented")
}
func (*UnimplementedFilmServiceExtServer) MovieCreditsWithTypes(context.Context, *MovieCreditsWithTypesReq) (*MovieCreditsWithTypesRep, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MovieCreditsWithTypes not implemented")
}

func RegisterFilmServiceExtServer(s *grpc.Server, srv FilmServiceExtServer) {
	s.RegisterService(&_FilmServiceExt_serviceDesc, srv)
}

func _FilmServiceExt_GetMovieTags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoviesTagsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmServiceExtServer).GetMovieTags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FilmServiceExt/GetMovieTags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmServiceExtServer).GetMovieTags(ctx, req.(*MoviesTagsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmServiceExt_GetMoviesList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoviesListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmServiceExtServer).GetMoviesList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FilmServiceExt/GetMoviesList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmServiceExtServer).GetMoviesList(ctx, req.(*MoviesListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmServiceExt_MovieDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovieDetailReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmServiceExtServer).MovieDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FilmServiceExt/MovieDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmServiceExtServer).MovieDetail(ctx, req.(*MovieDetailReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilmServiceExt_MovieCreditsWithTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MovieCreditsWithTypesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilmServiceExtServer).MovieCreditsWithTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.FilmServiceExt/MovieCreditsWithTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilmServiceExtServer).MovieCreditsWithTypes(ctx, req.(*MovieCreditsWithTypesReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilmServiceExt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.FilmServiceExt",
	HandlerType: (*FilmServiceExtServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetMovieTags",
			Handler:    _FilmServiceExt_GetMovieTags_Handler,
		},
		{
			MethodName: "GetMoviesList",
			Handler:    _FilmServiceExt_GetMoviesList_Handler,
		},
		{
			MethodName: "MovieDetail",
			Handler:    _FilmServiceExt_MovieDetail_Handler,
		},
		{
			MethodName: "MovieCreditsWithTypes",
			Handler:    _FilmServiceExt_MovieCreditsWithTypes_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "film.proto",
}
